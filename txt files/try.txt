<a class="box btn btn-primary margin-right" href="#mcq">
                <div>
                  <div class="card1 border-left-primary shadow h-100 py-2">
                    <div class="card-body">
                      <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                          <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">MCQ(3/20/2023)</div>
                          <div class="h6 mb-0 font-weight-bold text-gray-800">Top 25 Que on Electrostat.</div>
                        </div>
                        <div class="col-auto">
                          <i class="fas fa-atom fa-2x text-gray-300"></i>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </a>


              <a class="portfolio-link" data-bs-toggle="modal" href="#exp0531-3-2-1">
                    <div
                      class="chart-area"
                      style="background-image: url(https://i.postimg.cc/X7TVh5mx/3-2-1.jpg); background-position: center; background-size: contain; background-repeat: no-repeat"></div>
                  </a>


                  Boxex haruu hatako code
                  <h5><b>Solved Numericals</b></h5>
            <section class="backgif1 card margin-top">
              <div class="container px-lg-5">
                <div class="row">
                  <div class="col-lg-6 margin-top scol-xxl-4 mb-5">
                    <div class="card bg-light border-0 h-100">
                      <a class="btn-primary btn" href="img/Blue Background.jpg">
                        <div class="card-body text-center p-4 p-lg-5 pt-0 pt-lg-0">
                          <h2 class="fw-bold">Phy Electrostat</h2>
                          <p class="mb-0"></p>
                        </div>
                      </a>
                    </div>
                  </div>
                  <div class="col-lg-6 margin-top scol-xxl-4 mb-5">
                    <div class="card bg-light border-0 h-100">
                      <a class="btn-primary btn" href="img/Blue Background.jpg">
                        <div class="card-body text-center p-4 p-lg-5 pt-0 pt-lg-0">
                          <h2 class=" ">Ideal Gas</h2>
                          <p class="mb-0"></p>
                        </div>
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </section>

function checkAnswers() {
  var score = 0;
  var correctAnswers = ["option2", "option3", "option1"]; // Example correct answers

  var form = document.getElementById("quizForm");
  var resultDiv = document.getElementById("result");
  resultDiv.innerHTML = "";

  for (var i = 1; i <= 3; i++) {
    var selectedOption = getSelectedOption("q" + i);
    if (selectedOption === correctAnswers[i - 1]) {
      score++;
    } else {
      var question = document.getElementsByTagName("h3")[i - 1];
      var correctAnswer = document.createElement("p");
      correctAnswer.innerHTML = "Correct Answer: " + getOptionLabel("q" + i, correctAnswers[i - 1]);
      correctAnswer.style.color = "green";
      question.parentNode.insertBefore(correctAnswer, question.nextSibling);
    }
  }

  var percentage = (score / 3) * 100;
  resultDiv.innerHTML = "Your score: " + score + "/3 (" + percentage + "%)";
}

function getSelectedOption(questionName) {
  var options = document.getElementsByName(questionName);
  for (var i = 0; i < options.length; i++) {
    if (options[i].checked) {
      return options[i].value;
    }
  }
  return null;
}

function getOptionLabel(questionName, optionValue) {
  var options = document.getElementsByName(questionName);
  for (var i = 0; i < options.length; i++) {
    if (options[i].value === optionValue) {
      return options[i].nextSibling.nodeValue.trim();
    }
  }
  return null;
}

<!DOCTYPE html>
<html>
<head>
  <title>MCQ Quiz</title>
  <script src="quiz.js"></script>
</head>
<body>
  <h1>MCQ Quiz</h1>
  <form id="quizForm">
    <!-- Question 1 -->
    <div class="question">
      <h3>Question 1:</h3>
      <input type="radio" name="q1" value="option1" data-correct="false">Option 1<br>
      <input type="radio" name="q1" value="option2" data-correct="true">Option 2<br>
      <input type="radio" name="q1" value="option3" data-correct="false">Option 3<br>
    </div>

    <!-- Question 2 -->
    <div class="question">
      <h3>Question 2:</h3>
      <input type="radio" name="q2" value="option1" data-correct="true">Option 1<br>
      <input type="radio" name="q2" value="option2" data-correct="false">Option 2<br>
      <input type="radio" name="q2" value="option3" data-correct="false">Option 3<br>
    </div>

    <!-- Question 3 -->
    <div class="question">
      <h3>Question 3:</h3>
      <input type="radio" name="q3" value="option1" data-correct="false">Option 1<br>
      <input type="radio" name="q3" value="option2" data-correct="false">Option 2<br>
      <input type="radio" name="q3" value="option3" data-correct="true">Option 3<br>
    </div>

    <br>
    <input type="button" value="Submit" onclick="checkAnswers()" id="submit">
  </form>

  <div id="result"></div>
</body>
</html>


// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyC9JYxmu2_9EovJdkrd3W4vII5u6nInMfA",
  authDomain: "mold-skill-eafde.firebaseapp.com",
  databaseURL: "https://mold-skill-eafde-default-rtdb.firebaseio.com",
  projectId: "mold-skill-eafde",
  storageBucket: "mold-skill-eafde.appspot.com",
  messagingSenderId: "648939616010",
  appId: "1:648939616010:web:11f7961cc838f25e262cf3"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
  

  <script>
      // Your web app's Firebase configuration
      const firebaseConfig = {
        apiKey: "AIzaSyC9JYxmu2_9EovJdkrd3W4vII5u6nInMfA",
        authDomain: "mold-skill-eafde.firebaseapp.com",
        databaseURL: "https://mold-skill-eafde-default-rtdb.firebaseio.com",
        projectId: "mold-skill-eafde",
        storageBucket: "mold-skill-eafde.appspot.com",
        messagingSenderId: "648939616010",
        appId: "1:648939616010:web:11f7961cc838f25e262cf3",
      };

      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);

      // Retrieve a reference to the Firebase database
      var database = firebase.database();

      // Get the reference to the "opinions" node in the database
      var opinionsRef = database.ref("opinions");

      // Listen for new opinions and update the UI
      opinionsRef.on("child_added", function (data) {
        var opinion = data.val();
        displayMessage(opinion);
      });

      function displayMessage(opinion) {
        var chatMessages = document.getElementById("chat-messages");

        var messageContainer = document.createElement("div");
        messageContainer.classList.add("message");

        var sender = document.createElement("p");
        sender.classList.add("sender");
        sender.textContent = opinion.sender;

        var text = document.createElement("p");
        text.textContent = opinion.opinion;

        var timestamp = document.createElement("p");
        timestamp.classList.add("timestamp");
        timestamp.textContent = formatDate(opinion.timestamp);

        messageContainer.appendChild(sender);
        messageContainer.appendChild(text);
        messageContainer.appendChild(timestamp);

        if (opinion.imageUrl) {
          var image = document.createElement("img");
          image.src = opinion.imageUrl;
          messageContainer.appendChild(image);
        }

        chatMessages.appendChild(messageContainer);
      }

      function postOpinion() {
        var opinion = document.getElementById("opinion").value;
        var sender = document.getElementById("username").value;
        var email = document.getElementById("email").value;
        var file = document.getElementById("imageFile").files[0];

        if (file) {
          var storageRef = firebase.storage().ref("images/" + file.name);

          // Upload the image file to Firebase Storage
          var uploadTask = storageRef.put(file);

          // Get the download URL of the uploaded image and save the opinion with the URL
          uploadTask.then(function () {
            storageRef.getDownloadURL().then(function (url) {
              opinionsRef.push({
                sender: sender,
                email: email,
                opinion: opinion,
                imageUrl: url,
                timestamp: firebase.database.ServerValue.TIMESTAMP,
              });
            });
          });
        } else {
          // If no image is selected, save the opinion without an image URL
          opinionsRef.push({
            sender: sender,
            email: email,
            opinion: opinion,
            timestamp: firebase.database.ServerValue.TIMESTAMP,
          });
        }

        document.getElementById("opinion").value = "";
        document.getElementById("username").value = "";
        document.getElementById("email").value = "";
        document.getElementById("imageFile").value = null;
      }

      function formatDate(timestamp) {
        var date = new Date(timestamp);
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? "PM" : "AM";
        hours %= 12;
        hours = hours || 12;
        minutes = minutes < 10 ? "0" + minutes : minutes;
        var formattedTime = hours + ":" + minutes + " " + ampm;
        return formattedTime;
      }
    </script>